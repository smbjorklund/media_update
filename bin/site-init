#!/usr/bin/env perl

use strict;
use warnings;

use File::Basename qw(basename);
use Getopt::Long qw(GetOptions);

die "Need to run from the root of the w3.uib.no repo" unless -f "drupal/index.php";

my $PGDATABASE;
my $PGUSER;
my $PGPASS;
my $PGHOST;
my $PGPORT;

GetOptions(
    'dbname=s' => \$PGDATABASE,
    'username=s' => \$PGUSER,
    'password=s' => \$PGPASS,
    'host=s' => \$PGHOST,
    'port=n' => \$PGPORT,
) || usage();

usage() if @ARGV > 1;

sub usage {
    (my $progname = $0) =~ s,.*/,,;
    die "Usage: $progname [options] [sitename]\n";
}

my $SITE = shift;
if (!$SITE) {
    $SITE = readlink("site");
    $SITE = basename($SITE) if $SITE;
}
$SITE ||= "w3.uib.local";
die "Bad site name '$SITE'" if $SITE =~ /\s/;

# Default database parameters
$PGDATABASE ||= $ENV{PGDATABASE} || 'db1';
$PGUSER ||= $ENV{PGUSER} || 'user1';
$PGPASS ||= $ENV{PGPASS} || 'pass1';
$PGHOST ||= $ENV{PGHOST} || 'localhost';
$PGPORT ||= $ENV{PGPORT} || '5432';

if (-e "drupal/sites/$SITE") {
    #die "drupal/sites/$SITE already exists";
    system("rm -rf drupal/sites/$SITE.old");
    rename("drupal/sites/$SITE", "drupal/sites/$SITE.old");
}

mkdir("drupal/sites/$SITE", 0755) || die "Can't mkdir 'drupal/sites/$SITE': $!";
unlink("site");
symlink("drupal/sites/$SITE", "site") || die;
print "Created 'drupal/sites/$SITE' (symlinked from 'site')\n";

open(my $fh, ">site/settings.php") || die;
if (-d "files") {
    symlink("../../../files", "site/files");
}
else {
    mkdir("site/files", 0777);
}
print $fh <<EOT;
<?php

\$databases['default']['default'] = array (
  'database' => '$PGDATABASE',
  'username' => '$PGUSER',
  'password' => '$PGPASS',
  'host' => '$PGHOST',
  'port' => '$PGPORT',
  'driver' => 'pgsql',
  'prefix' => '',
);
\$update_free_access = FALSE;
\$drupal_hash_salt = 'ejpcOYgCoYl5D_Ro42E5ngEVDDwqeJTrFjvrlETGpY8';
ini_set('memory_limit', '640M');
ini_set('session.gc_probability', 1);
ini_set('session.gc_divisor', 100);
ini_set('session.gc_maxlifetime', 200000);
ini_set('session.cookie_lifetime', 2000000);
\$conf['404_fast_paths_exclude'] = '/\/(?:styles)\//';
\$conf['404_fast_paths'] = '/\.(?:txt|png|gif|jpe?g|css|js|ico|swf|flv|cgi|bat|pl|dll|exe|asp)$/i';
\$conf['404_fast_html'] = '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML+RDFa 1.0//EN" "http://www.w3.org/MarkUp/DTD/xhtml-rdfa-1.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><title>404 Not Found</title></head><body><h1>Not Found</h1><p>The requested URL "\@path" was not found on this server.</p></body></html>';
EOT

unless (-d "var/private") {
    mkdir("var", 0755);
    mkdir("var/private", 0777) || die "Can't mkdir 'var/private': $!";
    print "Created 'var/private'\n";
}

symlink("../../../etc/drushrc.php", "drupal/sites/$SITE/drushrc.php");

unless (-f "drupal/default/settings.php") {
    open(my $fh, ">", "drupal/sites/default/settings.php") || die;
    print $fh <<"EOT";
No default site.  You need to visit <a href="http://$SITE">$SITE</a> instead.
<?php
exit;
EOT
}

my $psql = qx(bin/site-drush sql-connect --verbose=0);
chomp($psql);

# Is there a suitable entry in .pgpass
my $pgpass_file = "$ENV{HOME}/.pgpass";
my $pgpass_line = "$PGHOST:$PGPORT:$PGDATABASE:$PGUSER:$PGPASS";

# Can we find an existing matching entry in ~/.pgpass
if (open(my $fh, $pgpass_file)) {
    while (<$fh>) {
	chomp;
	s/\*/[^:]+/g;
	if ($pgpass_line =~ /^$_$/) {
	    undef($pgpass_line);
	    last;
	}
    }
}

if ($pgpass_line) {
    open(my $fh, ">>", $pgpass_file) || die "Can't append to $pgpass_file: $!";
    print $fh "$pgpass_line\n";
    close($fh) || die;
    chmod(0600, $pgpass_file);
    print "Appended '$pgpass_line' to your $pgpass_file\n";
}

# Can we connect to the database
my $out = qx(echo "SELECT 'yup!'" | $psql -t -w 2>&1);
if ($?) {
    chomp($out);
    die "Failed to connect to the database with '$psql'\n$out" unless $out =~ /database \"$PGDATABASE\" does not exist/;
    (my $psql_postgres = $psql) =~ s/--dbname=\Q$PGDATABASE/--dbname=postgres/ || die;
    open(my $fh, "| $psql_postgres -e -w") || die;
    print $fh "CREATE DATABASE $PGDATABASE TEMPLATE template0 ENCODING 'UTF-8';\n";
    close($fh);
}
print "Connect with '$psql'\n";
