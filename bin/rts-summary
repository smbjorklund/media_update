#!/usr/bin/perl

use strict;
use LWP::UserAgent;
use URI;
use URI::QueryParam;
use JSON qw(from_json);
use Getopt::Long qw(GetOptions);
use HTTP::Date qw(time2iso);

GetOptions(\my %opt,
    'dump',
    'verbose',
) || usage();
usage() if @ARGV;

sub usage {
    die "Usage: $0 [--dump] [--verbose]\n";
}

binmode(STDOUT, ":utf8");

my $ua = LWP::UserAgent->new;
$ua->show_progress($opt{verbose});

my %count;  # updated by &count_issues

count_issues("open");
count_issues("closed");

if ($opt{dump}) {
    use Data::Dump; dd \%count;
    exit;
};

print join(",", map $_ || 0,
    time2iso(),
    $count{open},
    $count{closed},
    $count{release}{na}{open},
    $count{release}{na}{closed},
    $count{release}{'R1.fc'}{open},
    $count{release}{'R1.fc'}{closed},
    $count{release}{'R1.fc'}{unestimated}{open},
    $count{release}{'R1.fc'}{unestimated}{closed},
    $count{release}{'R1.fc'}{estimated_hours}{todo},
    $count{release}{'R1.fc'}{estimated_hours}{done},
), "\n";



sub w3_issues {
    my $status = shift || "open";

    my $u = URI->new('https://rts.uib.no');
    $u->path("issues.json");
    $u->query_param(key => '28578d440599e5e0a0a95039ddbaa71caf2bbb6b');
    $u->query_param(project_id => 'w3');
    $u->query_param(status_id => $status);
    $u->query_param(limit => 999);

    my @issues;
    my $total_count;

    do {
	$u->query_param('offset' => scalar(@issues)) if @issues;

	my $res = $ua->get($u);
	die $res->status_line unless $res->is_success;

	my $data = from_json($res->content);
	die unless $data;

	$total_count = $data->{total_count}
	    unless defined $total_count;

	my $issues = delete $data->{issues};
	#use Data::Dump; dd $data;

	push(@issues, @$issues);
    } while @issues < $total_count;

    return @issues;
}

sub count_issues {
    my $status = shift || die;
    for my $issue (w3_issues($status)) {
	$count{$status}++;
	my $release = $issue->{fixed_version}{name} || "na";
	$count{release}{$release}{$status}++;
	if (exists $issue->{estimated_hours}) {
	    my $done_ratio = ($issue->{done_ratio} || 0)/100;
	    $done_ratio = 1 if $status eq "closed";
	    my $hours = $issue->{estimated_hours};
	    $count{release}{$release}{estimated_hours}{done} += $hours * $done_ratio;
	    $count{release}{$release}{estimated_hours}{todo} += $hours * (1 - $done_ratio);
	    $count{release}{$release}{estimated_hours}{$status} += $hours;
	}
	else {
	    $count{release}{$release}{unestimated}{$status}++;
	}
    }
}

