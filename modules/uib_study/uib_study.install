<?php
/**
 * @file
 */

/**
 * Implements hook_schema().
 */
function uib_study_schema() {
  $schema['cache_uib_study'] = drupal_get_schema_unprocessed('system', 'cache');
  $schema['cache_uib_study']['description'] = 'Cache table for FS information.';
  return $schema;
}

/**
 * Remove all existing uib_study nodes from the system.
 */
function uib_study_update_7001() {
  $query = new EntityFieldQuery;
  $result = $query->entityCondition('entity_type', 'node')
    ->propertyCondition('type', 'uib_study')
    ->execute();

  $nids = array_keys($result['node']);
  $total = count($nids);
  print "Removing $total study nodes\n";
  node_delete_multiple($nids);
}

/**
 * Re-import all study programs (uib_study) from fs-sync.
 */
function uib_study_update_7002() {
  print "Re-Importing study programs from fs-sync\n";
  drush_uib_study_uib_sync_fs();
}

/**
 * Add nb aliases for new Study view paths
 */
function uib_study_update_7003() {
  $new_alias = array(
    'source' => 'course',
    'alias' => 'uib-archive?listing=studieemner',
    'language' => 'nb',
  );
  path_save($new_alias);
  $new_alias = array(
    'source' => 'course',
    'alias' => 'emne',
    'language' => 'nb',
  );
  path_save($new_alias);
  $new_alias = array(
    'source' => 'studyprogramme',
    'alias' => 'studieprogram',
    'language' => 'nb',
  );
  path_save($new_alias);
}

/**
 * Create cache table for FS
 */
function uib_study_update_7004() {
  $schema = uib_study_schema();
  foreach ($schema as $table => $fields) {
    if (!db_table_exists($table)) {
      db_create_table($table, $fields);
    }
  }
}

/**
 * Migrate Study images from w2
 */
function uib_study_update_7005() {
  module_load_include('inc', 'uib_migrate');
  // Get all study programmes
  $query = new EntityFieldQuery;
  $result = $query->entityCondition('entity_type', 'node')
    ->propertyCondition('type', 'uib_study')
    ->fieldCondition('field_uib_study_type', 'value', 'program')
    ->execute();

  $study_programmes = entity_load('node', array_keys($result['node']));

  $cnt = 0;
  $tot_cnt = 0;
  foreach($study_programmes as $nid => $study_node) {
    $tot_cnt++;
    $study = entity_metadata_wrapper('node', $study_node);
    $path = 'studieprogram/' . $study->field_uib_study_code->value() . '/xtopic';
    try {
      $w2_study_data = new XTopic($path, TRUE, 'studieprogram');
    }
    catch (Exception $e) {
      if ($e->getCode() == 404 OR $e->getCode() == 301) {
        uibx_log("Unable to find study programme " . $study->field_uib_study_code->value() . " in w2.", "warning");
        continue;
      }
      throw $e;
    }
    if (empty($w2_study_data->media)) {
      continue;
    }
    // Only a singe image is allowed with current field settings
    $w2_id = $w2_study_data->media[0];
    $migrated_file = xtopic_file($w2_id, $study->author->raw(), $study->language->value());
    if (!empty($migrated_file)) {
      $study->field_uib_study_image->set(array('fid' => $migrated_file->fid, 'display' => 1,));
      $study->save();
      $cnt++;
    }
    else {
      uibx_log("Could not fetch image. id=$w2_id", "warning");
    }
  }
  uibx_log("Migrated image for $cnt study programmes (out of $tot_cnt).");
}

/**
 * Remove field_uib_study_testimonial
 */
function uib_study_update_7006() {
  field_delete_field('field_uib_study_testimonial');
  field_purge_batch(1000);
}

/**
 * Add place 100000 where exphil belongs
 */
function uib_study_update_7007() {
  $node = new stdClass();
  $node->type = 'uib_ou';
  $node->title = 'The magic place where Examen Philosophicum courses belong';
  $node->field_ou_shortname['und'][0]['value'] = 'Ex. Phil.';
  $node->field_uib_ou_id['und'][0]['value'] = '100000';
  node_save($node);
  uibx_log("Created node $node->nid '$node->title' of type $node->type");
}

/**
 * Set Norwegian collation for study codes
 */
function uib_study_update_7008() {
    if (db_driver() == 'pgsql') {
      db_query('ALTER TABLE field_data_field_uib_study_code ALTER COLUMN field_uib_study_code_value TYPE character varying(16) COLLATE "nb_NO"');
    }
}

/**
 * Create aliases for NUS vocabuary
 */
function uib_study_update_7009() {
  $query = new EntityFieldQuery();
  $result = $query->entityCondition('entity_type', 'taxonomy_term')
    ->entityCondition('vocabulary_machine_name', 'uib_nus')
    ->execute();
  if (!empty($result['taxonomy_term'])) {
    $tids = array_keys($result['taxonomy_term']);
    $terms = entity_load('taxonomy_term', $tids);
    foreach ($terms as $term) {
      uib_study__add_taxonomy_aliases($term);
    }
  }
}
