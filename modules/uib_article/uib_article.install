<?php

/**
* Create redirects for migrated news and events where they do not exist
*/
function uib_article_update_7000() {
  $node_list = array();
  // Get all uib_article news node ids
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'uib_article')
    ->fieldCondition('field_uib_article_type', 'value', 'news', '=')
    ->fieldCondition('field_uib_w2_id', 'value', '', '>');
  $result = $query->execute();
  if ($result) {
    $node_list = array_merge($node_list, array_keys($result['node']));
  }
  // Get all uib_article event node ids
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'uib_article')
    ->fieldCondition('field_uib_article_type', 'value', 'event', '=')
    ->fieldCondition('field_uib_w2_id', 'value', '', '>');
  $result = $query->execute();
  if ($result) {
    $node_list = array_merge($node_list, array_keys($result['node']));
  }
  $nodes = entity_load('node', $node_list);
  foreach ($nodes as $node) {
    // set redirects
    uib_article__set_redirect($node);
  }
}

/**
* Populate parental area trail for existing articles (not infopages)
*/
function uib_article_update_7001() {
  // Do not bother infopages
  $article_types = array('event', 'news');
  // Do not handle past events
  $event_limit = date('Y-m-d H:i');
  // Do not handle too old news articles (creation timestamp). 30 days.
  $max_news_age = time() - 2592000;
  $cnt = 0;
  foreach ($article_types as $type) {
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'uib_article')
      ->fieldCondition('field_uib_article_type', 'value', $type, '=');
    if ($type == 'event') {
      $query->fieldCondition('field_uib_date', 'value2', $event_limit, '>=');
    }
    $result = $query->execute();
    $nodes = entity_load('node', array_keys($result['node']));
    foreach ($nodes as $node) {
      if (!empty($node->field_uib_area['und'][0]['target_id'])) {
        if ($type == 'news' && $node->created < $max_news_age) {
          continue;
        }
        $parent_trail = array();
        uib_area__get_parentage($node->field_uib_area['und'][0]['target_id'], $parent_trail);
        $node_areas = array();
        foreach ($node->field_uib_area['und'] as $area) {
          $node_areas[] = $area['target_id'];
        }
        foreach($parent_trail as $pt) {
          if (!in_array($pt, $node_areas)) {
            $node->field_uib_area['und'][]['target_id'] = $pt;
            $node_areas[] = $pt;
          }
        }
        node_save($node);
        uibx_log("Updated node $node->nid of article type $type");
        $cnt++;
      }
      else {
        uibx_log("Node $node->nid is missing area", "warning");
      }
    }
  }
  uibx_log("Updated $cnt articles");
}

/**
* Populate empty byline fields for existing news articles
*/
function uib_article_update_7002() {
  // Update all news articles that lack byline
  // Performed in two steps. First, find all in which byline exist
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'uib_article')
    ->fieldCondition('field_uib_article_type', 'value', 'news', '=')
    ->fieldCondition('field_uib_byline', 'target_id', 0, '>');
  $result = $query->execute();
  $with_byline = array_keys($result['node']);
  // Then get the nodes where byline does not exist
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'uib_article')
    ->fieldCondition('field_uib_article_type', 'value', 'news', '=')
    ->entityCondition('entity_id', $with_byline, 'NOT IN');
  $result = $query->execute();
  $nodes = entity_load('node', array_keys($result['node']));
  $cnt = 0;
  foreach ($nodes as $node) {
    $node->field_uib_byline['und'][]['target_id'] = $node->uid;
    field_attach_update('node', $node);
    $cnt++;
  }
  uibx_log("Updated $cnt news articles.", "notice");
}
