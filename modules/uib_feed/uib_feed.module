<?php
/**
 * @file
 * Code for formatting and parsing RSS feeds.
 */

/**
 * @param string $url         The url indicating the location of the RSS feed.
 * @param string $title       Title for the feed, by default is empty and no title is added.
 * @param int    $limit       Amount of news in the feed to be listed. By default 5.
 * @param array  $post_render Array with names of functions to be used in post render to
 *                            format output. By default empty.
 */
function uib_feed__format($url, $title = '', $limit = 5, $post_render = array()) {
  return array(
    '#cache' => array(
      'keys' => array($url, $title, $limit),
      'expire' => time() + 30*60,
    ),
    '#pre_render' => array('uib_feed__format_pre_render'),
    '#post_render' => $post_render,
  );
}

/**
 * The heavy stuff done during uib_feed_form()
 */
function uib_feed__format_pre_render($element) {
  list($url, $title, $limit) = $element['#cache']['keys'];
  $content = @file_get_contents($url);
  if (!$content) {
    return $element;
  }
  $xml = @simplexml_load_string($content);
  if ($xml === FALSE) {
    return $element;
  }
  if ($xml->channel->item) {
    $element['list'] = array(
      '#items' => array(),
      '#theme' => 'item_list',
    );
    if ($title != '')
      $element['list']['#title'] = $title;
    foreach ($xml->channel->item as $entry) {
      $pubDate = $entry->pubDate;
      if (!empty($pubDate)) {
        $pubDate_t = strtotime($pubDate);
        if ($pubDate_t) {
          $pubDate_f = strftime("%Y-%m-%d", $pubDate_t);
          $entry->title .= " ($pubDate_f)";
        }
      }
      $element['list']['#items'][] = l($entry->title, $entry->link);
      if (--$limit == 0)
        break;
    }
  }
  if (!isset($element['list'])) {
    $element = array();
  }
  return $element;
}
