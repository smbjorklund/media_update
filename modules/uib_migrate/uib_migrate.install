<?php
/**
 * Update file data for already migrated files
 */
function uib_migrate_update_7000() {
  $table = array(
    'field_data_field_uib_primary_media',
    'field_data_field_uib_media',
    'field_data_field_uib_main_media',
    );
  $field = array(
    'field_uib_primary_media_fid',
    'field_uib_media_fid',
    'field_uib_main_media_fid',
    );

  for ($i = 0; $i < count($table); $i++) {
    // get file information from db
    $query = db_select($table[$i], 'f');
    $query->join('node', 'n', 'n.nid = f.entity_id');
    $query->fields('f', array($field[$i])); // file id (fid)
    $query->fields('n', array('language')); // language of the node
    $result = $query->execute();
    foreach ($result as $row) {
      $file = file_load($row->{$field[$i]});
      // Fix drupal file type if previous migration
      // had saved audio as document.
      $tmp = explode('/', $file->filemime);
      $media_content_type = trim($tmp[0]);
      if ($file->type != $media_content_type) {
        if ($media_content_type == 'image') {
           $file->type = 'image';
        }
        elseif ($media_content_type == 'audio') {
           $file->type = 'audio';
        }
        elseif ($media_content_type == 'video') {
          $file->type = 'video';
        }
        else {
          $file->type = 'document';
        }
      }
      // Fix previous erroneously migrated descriptions
      if (isset($file->field_uib_description['und'])) {
        if (!isset($file->field_uib_description[$row->language])) {
          $file->field_uib_description[$row->language][]['value'] = $file->field_uib_description['und'][0]['value'];
          unset($file->field_uib_description['und']);
        }
      }
      // Fix previous erroneously migrated image titles
      if (isset($file->field_file_image_title_text['und'])) {
        if (!isset($file->field_file_image_title_text[$row->language])) {
          $file->field_file_image_title_text[$row->language][]['value'] = $file->field_file_image_title_text['und'][0]['value'];
          unset($file->field_file_image_title_text['und']);
        }
      }
      // Populate image files title and ALT attribute with something useful.
      if (!empty($file->field_uib_description[$row->language][0]['value'])) {
        if ($file->type == 'image') {
          if (empty($file->field_file_image_title_text[$row->language])) {
            if (!empty($file->field_uib_description[$row->language])) {
              $file->field_file_image_title_text[$row->language][]['value'] = truncate_utf8($file->field_uib_description[$row->language][0]['value'], 200, TRUE, TRUE, 1);
            }
          }
          if (empty($file->field_file_image_alt_text['und'])) {
            if (!empty($file->field_uib_description[$row->language])) {
              $file->field_file_image_alt_text['und'][]['value'] = truncate_utf8($file->field_uib_description[$row->language][0]['value'], 80, TRUE, TRUE, 1);
            }
          }
        }
      }
      // init entity translation
      if ($file->type != 'document') {
        $et = entity_translation_get_handler('file', $file);
        $translation = array('language' => $row->language, 'status' => 1);
        $et->setTranslation($translation);
        $et->setOriginalLanguage($row->language); // set original language
      }
      file_save($file);
    }
  }
}

/**
 * Clean up EP migration tables
 */
function uib_migrate_update_7001() {
  db_delete('migrate_status')
    ->condition('machine_name', array('EPagesNodes', 'EPagesMenuLinks'), 'in')
    ->execute();
  db_drop_table('migrate_message_epagesnodes');
  db_drop_table('migrate_message_epagesmenulinks');
  db_drop_table('migrate_map_epagesnodes');
  db_drop_table('migrate_map_epagesmenulinks');
}
