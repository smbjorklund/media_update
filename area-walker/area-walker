#!/usr/bin/env python

import uib.web
import json
from collections import Counter
import argparse

class XTopic(object):
    def __init__(self, etree):
        self.etree = etree

    def id(self):
        return self.etree.get('id')

    def title(self):
        return self.etree.find('title').text

    def site(self):
        e = self.etree.find('site')
        return e.get('ref') if e is not None else None

    def topic_type(self):
        return self.etree.find('type').get('name')

    def nav_kids(self):
        site = self.etree.find('site')
        if site is not None:
            site = site.get('ref')
        for f in self.etree.findall('field'):
            if f.get('name') == 'menuorder' and f.get('scope') == site:
                return json.loads(f.text)
        return []

class XTopic_UserAgent(uib.web.UserAgent):
    prefix = "http://testbool.uib.no/"

    def get(self, url):
        if not url.startswith(("http:", "https")):
            url = self.prefix + url
        return super(XTopic_UserAgent, self).get(url)

    def _xtopic(self, etree):
        if etree is None:
            return None
        t = etree.find('topic')
        if t is None:
            return None
        return XTopic(t)

    def get_xtopic(self, xid):
        return self._xtopic(self.get_xml_etree('topicmap/@@xtopic?id=' + str(xid)))

    def get_xtopic_by_path(self, path):
        return self._xtopic(self.get_xml_etree(path + '/xtopic'))

def print_indent(depth, line):
    print '  ' * depth, line.encode('UTF-8')

class Walker(object):
    def __init__(self, site):
        self.type_counter = Counter()
        self.site = site
        self.seen = set()

    def xprint(self, topic, depth):
        line = topic.title()
        line += ' ['
        t = topic.topic_type()
        if t:
            line += t
        if topic.site() != self.site:
            line += '*'
        if topic.id() in self.seen:
            line += ', DUPLICATE'
        line += ']'

        print_indent(depth, line)

    def walk(self, topic, depth=0):
        self.xprint(topic, depth)
        if topic.id() in self.seen:
            return

        self.seen.add(topic.id())

        self.type_counter[topic.topic_type()] += 1;
        for k in topic.nav_kids():
            t = ua.get_xtopic(k)
            if t:
                self.walk(t, depth + 1)
            else:
                print_indent(depth + 1, '### %s does not exist!' % (k,))

arg_parser = argparse.ArgumentParser(description='Walk the navigation menus of an area')
arg_parser.add_argument('area', default='it', nargs='?', help='area path to start traversing (default is "it")')

args = arg_parser.parse_args()

ua = XTopic_UserAgent()
area = ua.get_xtopic_by_path(args.area)
if area is None:
    import sys
    sys.stderr.write('No such area: ' + repr(args.area) + '\n')
    sys.exit(1)

walker = Walker(area.site())
walker.walk(area)

print
print walker.type_counter
